
program => statement* EOF

statement => expressionStatement			| 
			 printStatement					|
			 declearationStatement			|	 
			 varAssignmentStatement			|
			 functionDeclarationStatement	|
			 blockStatement

declearationStatement => varDeclearationStatement		| 
						 functionDeclarationStatement

expressionStatement => expression ";"
printStatement => "print " expression ";"
varDeclearationStatement => varType IDENTIFIER ("=" expression)? ";"
varAssignmentStatement => IDENTIFIER "=" expression ";"

functionDeclarationStatement => varType IDENTIFIER "(" (varType IDENTIFIER)* ")" blockStatement;
blockStatement => "{" statement* "}";



varType => "short"  |
		   "int"	|
		   "long"	|
		   "float"	|
		   "double"

expression => binary | unary | literal

binary  => expression operator expression
unary   => "-" unary | primary
primary => NUMBER | STRING | IDENTIFIER | "true" | "false"

operator => "+" | "-" | "*" | "/" | "==" | "!=" | "&&" | "||" 

